lang Nav {buoy[Capesize], buoy[Suezmax], buoy, revoked}.

trust (dma, buoy1) with {Nav: buoy[Capesize]};
trust (dma, buoy2) with {Nav: buoy[Suezmax]};

for X where {
    dma, X:  {Nav :buoy}
} do {
    when (eval(dma, X, {Nav: bouy[Capesize]})) do {
        trust (captain, X) with {Nav: [Capesize]}
    } otherwise {
        trust (captain, buoy1) with {Nav: revoked}
    }
};

trust (dma, buoy1) with {Nav: revoked}.